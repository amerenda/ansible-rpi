---
- name: bootstrap master
  shell: curl -sfL https://get.k3s.io | sh -
  async: 1000
  poll: 0
  register: _k3s_master_bootstrap_bg
  when: "'k3s_master' in group_names"

- name: download k3s binary
  get_url:
    url: https://github.com/rancher/k3s/releases/download/v{{ k3s_version }}/k3s-armhf
    dest: /usr/local/bin/k3s
    mode: '0755'
  when: "'k3s_agents' in group_names"

- name: wait for bootstrap master to finish (times out in 5 minutes)
  async_status: jid={{ _k3s_master_bootstrap_bg.ansible_job_id }}
  register: _job_result
  until: _job_result.finished and _k3s_master_bootstrap_bg.rc == 0
  retries: 300
  delay: 1
  ignore_errors: True
  when: "'k3s_master' in group_names"

- name: remove traefik from master
  file:
    path: /var/lib/rancher/k3s/server/manifests/traefik.yml
    state: absent
  when: "'k3s_master' in group_names"

- name: get join token
  command: cat /var/lib/rancher/k3s/server/node-token
  register: _k3s_token
  when: "'k3s_master' in group_names"

- name: join agents
  block:
  - name: set master node ip address and join token
    set_fact:
      _k3s_master_ip_address: "{{ hostvars[groups['k3s_master'][0]]['ansible_default_ipv4']['address'] }}"
      _k3s_master_join_token: "{{ hostvars[groups['k3s_master'][0]]['_k3s_token']['stdout'] }}"
      _k3s_role: "agent"

  - name: upload k3s service file
    template:
      src: k3s.service.j2
      dest: /etc/systemd/system/k3s-agent.service
      owner: root
      group: root
      mode: 0600

  - name: upload k3s service env file
    template:
      src: k3s-agent.service.env.j2
      dest: /etc/systemd/system/k3s-agent.service.env

  - name: reload systemd
    systemd:
      daemon_reload: yes

  - name: join k3s agent(s) to master
    systemd:
      name: k3s-agent
      state: restarted
      enabled: yes

  when: "'k3s_agents' in group_names"

- name: setup kube config
  block:
  - name: remove old kube dir
    file:
      path: ~/.kube
      state: absent

  - name: ensure kube dir
    file:
      path: ~/.kube
      state: directory

  delegate_to: localhost

- name: download kube config
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~/.kube/config
    flat: yes
  when: "k3s_master' in group_names"
