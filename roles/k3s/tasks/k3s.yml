---
- name: bootstrap master
  shell: curl https://k3s.io | sudo sh
  async: 1000
  poll: 10
  register: _k3s_master_bootstrap_bg
  when: k3s_master == inventory_hostname

- name: bootstrap workers
  block:
  - name: download k3s binary
    get_url:
      url: https://github.com/rancher/k3s/releases/download/v{{ k3s_version }}/k3s-armhf
      dest: /usr/local/bin/
      mode: '0755'

  - name: download k3s systemd unit file
    get_url:
      url: https://raw.githubusercontent.com/rancher/k3s/master/k3s.service
      dest: /etc/systemd/system/k3s.service

  - name: reload systemd
    systemd:
      daemon-reload: yes

  - name: enable k3s
    systemd:
      name: k3s.serivce
      enabled: yes

when: inventory_hostname in k3s_workers

- name: wait for bootstrap master to finish (times out in 5 minutes)
  async_status: jid={{ _k3s_master_bootstrap_bg.ansible_job_id }}
  register: _job_result
  until: _job_result.finished
  retries: 30
  delay: 10

-name: set master join variables
  block:
  - name: get join token
    command: cat /var/lib/rancher/k3s/server/node-token
    register: _k3s_token

  - name: set join token and master ip address facts
    set_fact:
      _k3s_master_ip_address: "{{ ansible_host }}"
      _k3s_master_join_token: "{{ _k3s_token.stdout }}"

when: k3s_master == inventory_hostname

- name: join k3s agent(s) to master
  shell: k3s agent --server ${K3S_URL} --token ${K3S_TOKEN}
  environment:
    K3S_URL: "https://{{ _k3s_master_ip_address: }}:6443"
    K3S_TOKEN: "{{ _k3s_master_join_token }}"
when: inventory_hostname in k3s_workers
